[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "ARMSNBL",
    "section": "",
    "text": "This is a Quarto website.\nTo learn more about Quarto websites visit https://quarto.org/docs/websites."
  },
  {
    "objectID": "expression.html",
    "href": "expression.html",
    "title": "2  Expression data analysis",
    "section": "",
    "text": "3 Loading data:\nThe pathways analysis will be performed analysing 2 sets of genes: 1. Full DMR/DMPs: the full set of significant diferentially methylated & expressed genes. 2. Cor.sig: A subset of the above where the correlation p.value is smaller than 0.05"
  },
  {
    "objectID": "expression.html#sample-sheet",
    "href": "expression.html#sample-sheet",
    "title": "2  Expression data analysis",
    "section": "3.1 Sample sheet",
    "text": "3.1 Sample sheet\n\ntable(ss[,Condition,by=Type])\n\n      Condition\nType   cell_line metastasis primary tumour\n  ARMS         2          2       3      2\n  NBL          0          2       3      3\n\n\n\ndtable(ss)"
  },
  {
    "objectID": "expression.html#annotation",
    "href": "expression.html#annotation",
    "title": "2  Expression data analysis",
    "section": "3.2 Annotation:",
    "text": "3.2 Annotation:\n\n3.2.1 Affymetrix default:\nThe added file will be used as starting point to annotate CalriomD array.\n\nlibrary(data.table)\nanno &lt;- data.table::fread(params$array_annotation)\nnames(anno) &lt;- make.names(colnames(anno))\n# anno[,rn:=Probe.Set.ID]\nstr(anno)\n\nClasses 'data.table' and 'data.frame':  134748 obs. of  3 variables:\n $ Probe.Set.ID: chr  \"TC0100007786.hg.1\" \"TC1600011519.hg.1\" \"TC1600011520.hg.1\" \"TC0800012474.hg.1\" ...\n $ Gene.Symbol : chr  \"AGO1\" \"SEPT1\" \"SEPT1\" \"AGO2\" ...\n $ Gene.Title  : chr  \"argonaute RISC catalytic component 1\" \"septin 1\" \"septin 1\" \"argonaute RISC catalytic component 2\" ...\n - attr(*, \".internal.selfref\")=&lt;externalptr&gt; \n\n\nThe gene symbols come from different origin. Thus, we don’t know how many of them will match with the methylation known genes UCSC_RefGene_Name\n\nlibrary(IlluminaHumanMethylationEPICanno.ilm10b2.hg19)\nknown.genes&lt;-IlluminaHumanMethylationEPICanno.ilm10b2.hg19::Other$UCSC_RefGene_Name\nknown.genes&lt;-unique(unlist(sapply(known.genes,function(x)unlist(strsplit(x,\";\")))))\nsaveRDS(known.genes, \"data/known.genes.RDS\")\n\nWe can check how many candidate genes we have some methylation data availabe from the EPIC array:\n\nlength(known.genes)\n\n[1] 27369\n\n\nWe can now check how many probes from the ClariomD panel map to those same genes:\n\ntable(anno$Gene.Symbol %in% known.genes)\n\n\n FALSE   TRUE \n108769  25979 \n\ncandidate_genes &lt;- unique(intersect(unique(anno$Gene.Symbol),known.genes))\n\n25979 probes out of 134748 in the array will provide useful information that we can match with methylation data. That is a bit less than 20% of the array. In contrast, 88% of the genes present in the methylation array annotation are also present here.\nOne option would be that ClariomD has much more genes in it’s annotation than the EPIC arrays. Let’s check on that:\n\nlibrary(clariomdhumantranscriptcluster.db)\n\nLoading required package: AnnotationDbi\n\n\nLoading required package: stats4\n\n\nLoading required package: BiocGenerics\n\n\n\nAttaching package: 'BiocGenerics'\n\n\nThe following objects are masked from 'package:stats':\n\n    IQR, mad, sd, var, xtabs\n\n\nThe following objects are masked from 'package:base':\n\n    anyDuplicated, aperm, append, as.data.frame, basename, cbind,\n    colnames, dirname, do.call, duplicated, eval, evalq, Filter, Find,\n    get, grep, grepl, intersect, is.unsorted, lapply, Map, mapply,\n    match, mget, order, paste, pmax, pmax.int, pmin, pmin.int,\n    Position, rank, rbind, Reduce, rownames, sapply, setdiff, sort,\n    table, tapply, union, unique, unsplit, which.max, which.min\n\n\nLoading required package: Biobase\n\n\nWelcome to Bioconductor\n\n    Vignettes contain introductory material; view with\n    'browseVignettes()'. To cite Bioconductor, see\n    'citation(\"Biobase\")', and for packages 'citation(\"pkgname\")'.\n\n\nLoading required package: IRanges\n\n\nLoading required package: S4Vectors\n\n\n\nAttaching package: 'S4Vectors'\n\n\nThe following objects are masked from 'package:data.table':\n\n    first, second\n\n\nThe following objects are masked from 'package:base':\n\n    expand.grid, I, unname\n\n\n\nAttaching package: 'IRanges'\n\n\nThe following object is masked from 'package:data.table':\n\n    shift\n\n\nLoading required package: org.Hs.eg.db\n\n\n\n\n\n\n\nselect(clariomdhumantranscriptcluster.db, keys=keys(clariomdhumantranscriptcluster.db),columns = c(\"PROBEID\",\"SYMBOL\"))-&gt; clariom_gene_symbol\n\n'select()' returned 1:many mapping between keys and columns\n\nclariom_gene_symbol &lt;- clariom_gene_symbol[!is.na(clariom_gene_symbol$SYMBOL),]\nlength(unique(clariom_gene_symbol$SYMBOL))\n\n[1] 26284\n\n\n\nIn summary:\n\nsu &lt;- data.table(\n  # Probes in expression array:\n  N_probes_array=NROW(anno),\n  # Probes in expression array with associated gene symbols \n  N_probes_gene_exp=paste0(\n    length(unique(clariom_gene_symbol$PROBEID)),\n    \" (\",\n    round(length(unique(clariom_gene_symbol$PROBEID))/NROW(anno)*100),\n    \"%)\"\n    ),\n  # Probes in expression array with associated gene symbols that are also associated to methylation EPIC array probes\n  N_probes_gene_exp_meth =paste0(\n    length(unique(clariom_gene_symbol[clariom_gene_symbol$SYMBOL %in% known.genes,\"PROBEID\"])),\n    \" (\",\n    round(length(unique(clariom_gene_symbol[clariom_gene_symbol$SYMBOL %in% known.genes,\"PROBEID\"]))/NROW(anno)*100),\n    \"%)\"\n    ),\n  # List of genes associated to EPIC methylation array\n  N_genes_meth=length(known.genes),\n  # List of genesassociated to ClariomD expression array\n  N_genes_exp=length(unique(clariom_gene_symbol$SYMBOL)),\n  # List of genes associated both to methylation and expression arrrays\n  N_genes_exp_meth= paste0(\n    length(unique(intersect(clariom_gene_symbol$SYMBOL,known.genes))),\n    \" (\",\n    round(length(unique(intersect(clariom_gene_symbol$SYMBOL,known.genes)))/length(unique(clariom_gene_symbol$SYMBOL))*100),\n    \"%)\"\n    )\n)\n\nsu    \n\n   N_probes_array N_probes_gene_exp N_probes_gene_exp_meth N_genes_meth\n1:         134748       25570 (19%)            22140 (16%)        27369\n   N_genes_exp N_genes_exp_meth\n1:       26284      22695 (86%)\n\n\nThe clariomD expression array contains 134748 probes from which 25570 (19%) probes are associated to 26284 different known genes (UCSC symbol). The EPIC methylation array has annotation associated to 27369 genes. In order to compare Differentially methylated genes (DMG) with differentially expressed genes (DEGs) we match the two annotation datasets by overlaping the genes (UCSC symbol) that are associated both to expression and methylation. There is a total of su$N_genes_exp_meth candidate genes that overlap which correspond to su$N_probes_gene_exp_meth probesets from the ClariomD expression array.\nA possible explanation is that the Clariom D array is intended to have what Affy calls ‘deep content’, unfortunately much of which isn’t assocaited with any annotated genes. This is why of the ~139K probesets on that array, only su$N_probes_gene_exp have an associated gene (SYMBOL/UCSC_RefGene_Name). There are probably many reasons for that, but the primary reason is that Affy put a bunch of speculative content on the array which remains speculative to this day.\n\n\n3.2.2 MBNI re-map\n\nThe MBNI group at Michigan do a re-mapping of the probesets where they just pretend Affy never did any annotating, and they take all the probes on the array, align to the genome and then throw out all the probes that don’t align to a unique genomic position. They then take the remaining probes and count up all those that align to a known gene location, and put them in new probesets that are just one probeset per gene. They take the 8.1M probes on this array and throw out 5.7M of them, and only use the remaining 29% of the probes to do that.\nJames W. Mac Donald https://support.bioconductor.org/p/126059/\n\n\ninstall.packages(\"http://mbni.org/customcdf/25.0.0/entrezg.download/clariomdhumanhsentrezg.db_25.0.0.tar.gz\")\ninstall.packages(\"http://mbni.org/customcdf/25.0.0/entrezg.download/pd.clariomdhuman.hs.entrezg_25.0.0.tar.gz\")\n\nHere we must start from the .CEL files to map the probes to the new probsets defined in pd.clariomdhuman.hs.entrezg\n\nlibrary(annotate)\nlibrary(pdInfoBuilder)\nlibrary(pd.clariomdhuman.hs.entrezg)\nlibrary(clariomdhumanhsentrezg.db)\nMBNI_gene_symbol &lt;- AnnotationDbi::select(clariomdhumanhsentrezg.db,keys=keys(clariomdhumanhsentrezg.db),columns=c(\"SYMBOL\",\"PROBEID\"))\nsu2 &lt;- data.table(\n  N_probes_array=NROW(anno),\n  N_probes_gene_exp=paste0(\n    length(unique(MBNI_gene_symbol$PROBEID)),\n    \" (\",\n    round(length(unique(MBNI_gene_symbol$PROBEID))/NROW(anno)*100),\n    \"%)\"\n    ),\n  N_probes_gene_exp_meth =paste0(\n    length(unique(MBNI_gene_symbol[MBNI_gene_symbol$SYMBOL %in% known.genes,\"PROBEID\"])),\n    \" (\",\n    round(length(unique(MBNI_gene_symbol[MBNI_gene_symbol$SYMBOL %in% known.genes,\"PROBEID\"]))/NROW(anno)*100),\n    \"%)\"\n    ),\n  N_genes_meth=length(known.genes),\n  N_genes_exp=length(unique(MBNI_gene_symbol$SYMBOL)),\n  \n  N_genes_exp_meth= paste0(\n    length(unique(intersect(MBNI_gene_symbol$SYMBOL,known.genes))),\n    \" (\",\n    round(length(unique(intersect(MBNI_gene_symbol$SYMBOL,known.genes)))/length(unique(MBNI_gene_symbol$SYMBOL))*100),\n    \"%)\"\n    )\n)\n\nsu2    \n\n\n\n3.2.3 Ewig sarcoma\nWe can use the super-enhancers dataset for high levels of EWS-FLI1 protein from the paper (Tomazou2015?):\n\nsuperenh_anno &lt;- data.table::fread(\"https://medical-epigenomics.org/papers/tomazou2015/resultTables/Super-enhancersEWS-FLI1high.bed\")"
  },
  {
    "objectID": "expression.html#expression",
    "href": "expression.html#expression",
    "title": "2  Expression data analysis",
    "section": "3.3 Expression:",
    "text": "3.3 Expression:\n\n3.3.1 Counts:\n\nnamedlist &lt;- function(...) {\n  nl &lt;- list(...)\n  argnames &lt;- sys.call()\n  n&lt;-sapply(argnames[-1], as.character)\n  names(nl)&lt;-n\n\n\n  return(nl)\n  }\n\nlibrary(readxl)\nlibrary(data.table)\ncounts&lt;-list()\n#NBL:\nNBL_raw &lt;- readxl::read_xlsx(\"raw/20230712_OMartinez_ARMSNBL/DEG/Norm_NBL_values.xlsx\", sheet = 1)\nNBL_raw &lt;- unique(NBL_raw[,!colnames(NBL_raw)%in%c(\"Gene.Symbol\",\"Gene.Title\")])\nNBL&lt;-merge(anno,NBL_raw,by=\"Probe.Set.ID\")\n#ARMS:\nARMS_raw &lt;- readxl::read_xlsx(\"raw/20230712_OMartinez_ARMSNBL/DEG/Norm-RMS-merged.xlsx\", sheet = 1)\nARMS_raw &lt;- ARMS_raw[,!colnames(ARMS_raw)%in%c(\"Gene.Symbol\",\"Gene.Title\")]\nARMS&lt;-merge(anno,ARMS_raw,all.y=T,by=\"Probe.Set.ID\")\ncounts &lt;-namedlist(NBL,ARMS)\n\n\nstr(counts)\n\nList of 2\n $ NBL :Classes 'data.table' and 'data.frame':  134748 obs. of  34 variables:\n  ..$ Probe.Set.ID: chr [1:134748] \"TC0100006432.hg.1\" \"TC0100006433.hg.1\" \"TC0100006434.hg.1\" \"TC0100006435.hg.1\" ...\n  ..$ Gene.Symbol : chr [1:134748] \"DDX11L1\" \"spopoybu\" \"MIR1302-10\" \"OR4G4P\" ...\n  ..$ Gene.Title  : chr [1:134748] \"DEAD/H (Asp-Glu-Ala-Asp/His) box helicase 11 like 1\" \"Transcript Identified by AceView\" \"microRNA 1302-10\" \"olfactory receptor, family 4, subfamily G, member 4 pseudogene\" ...\n  ..$ rn          : chr [1:134748] \"15568\" \"122807\" \"36412\" \"91829\" ...\n  ..$ NB5_1MP     : num [1:134748] 4.68 6.28 5.06 3.27 3.92 ...\n  ..$ NB5_1TP     : num [1:134748] 4.92 5.88 5.17 2.82 4.11 ...\n  ..$ NB5_3MP     : num [1:134748] 4.85 6.66 5.24 3.51 4.12 ...\n  ..$ NB5_3TP     : num [1:134748] 4.83 6.21 4.99 3.37 4.27 ...\n  ..$ NB5_5MP     : num [1:134748] 4.73 5.82 4.52 3.4 4.25 ...\n  ..$ NB5_5TP     : num [1:134748] 5.1 6 5.15 3.4 3.62 ...\n  ..$ NB5_6MP     : num [1:134748] 4.64 6.66 4.93 3.14 3.81 ...\n  ..$ NB5_6TP     : num [1:134748] 4.55 6.2 4.96 2.9 3.91 ...\n  ..$ NB5_9MP     : num [1:134748] 4.12 6.09 4.9 3.34 3.67 ...\n  ..$ NB5_9TP     : num [1:134748] 4.89 6.14 4.89 3.41 3.39 ...\n  ..$ NB16_2MP    : num [1:134748] 4.8 6 5.43 3.15 4.42 ...\n  ..$ NB16_2TP    : num [1:134748] 5.02 6.19 4.99 3.42 3.87 ...\n  ..$ NB16_3MP    : num [1:134748] 4.84 6.17 4.95 3.28 3.84 ...\n  ..$ NB16_3TP    : num [1:134748] 4.48 5.94 4.83 3.68 3.77 ...\n  ..$ NB16_6TP    : num [1:134748] 5.05 6.1 5.18 3.18 4 ...\n  ..$ NB16_6MP    : num [1:134748] 4.57 6.35 5.03 3.6 3.74 ...\n  ..$ NB16_7TP    : num [1:134748] 4.91 6.17 4.98 3.29 4.04 ...\n  ..$ NB16_8TP    : num [1:134748] 4.96 6.17 5.09 2.97 4.04 ...\n  ..$ NB16_9MP    : num [1:134748] 4.68 6.12 5.09 3.82 3.93 ...\n  ..$ NB16_9TP    : num [1:134748] 4.94 6.25 4.87 3.44 3.52 ...\n  ..$ NB5_1       : num [1:134748] 4.63 5.67 4.57 3.54 3.61 ...\n  ..$ NB5_2       : num [1:134748] 4.69 5.78 4.94 3.31 3.73 ...\n  ..$ NB5_3       : num [1:134748] 4.61 6.13 5.86 2.63 4.11 ...\n  ..$ NB5_4       : num [1:134748] 5.1 5.86 5.43 3.15 3.99 ...\n  ..$ NB5_5       : num [1:134748] 5.07 6.55 4.77 3.16 3.86 ...\n  ..$ NB16_1      : num [1:134748] 4.35 6.31 4.85 3.21 4.45 ...\n  ..$ NB16_2      : num [1:134748] 4.67 6.19 4.63 3.17 4.34 ...\n  ..$ NB16_3      : num [1:134748] 4.47 5.88 4.97 3.15 3.57 ...\n  ..$ NB16_4      : num [1:134748] 4.7 6.32 4.94 2.88 4.12 ...\n  ..$ NB16_5      : num [1:134748] 4.3 6.19 5.12 3.18 4.05 ...\n  ..- attr(*, \".internal.selfref\")=&lt;externalptr&gt; \n  ..- attr(*, \"sorted\")= chr \"Probe.Set.ID\"\n $ ARMS:Classes 'data.table' and 'data.frame':  134748 obs. of  16 variables:\n  ..$ Probe.Set.ID: chr [1:134748] \"TC0100007786.hg.1\" \"TC0X00010643.hg.1\" \"TC0900011072.hg.1\" \"TC0200007996.hg.1\" ...\n  ..$ Gene.Symbol : chr [1:134748] \"AGO1\" \"SEPT6\" \"ABCA1\" \"AC007881.4\" ...\n  ..$ Gene.Title  : chr [1:134748] \"argonaute RISC catalytic component 1\" \"septin 6\" \"ATP binding cassette subfamily A member 1\" NA ...\n  ..$ rn          : chr [1:134748] \"1\" \"10\" \"100\" \"1000\" ...\n  ..$ 1T          : num [1:134748] 9.46 9.45 5.91 7.3 7.11 ...\n  ..$ 1M          : num [1:134748] 9.78 9.29 6.28 6.96 7.5 ...\n  ..$ 2T          : num [1:134748] 9.24 9.19 5.69 7.15 7.24 ...\n  ..$ 2M          : num [1:134748] 9.62 9.27 5.41 7.22 7.68 ...\n  ..$ 3T          : num [1:134748] 9.07 9.06 6.06 7 7.24 ...\n  ..$ 3M          : num [1:134748] 9.5 9.48 5.62 7.32 7.59 ...\n  ..$ RH.1        : num [1:134748] 9.6 9.82 5.61 7.77 7.93 ...\n  ..$ RH.2        : num [1:134748] 9.58 9.94 5.94 7.72 7.87 ...\n  ..$ RH.3        : num [1:134748] 9.73 10.22 5.81 7.74 7.81 ...\n  ..$ N1.1        : num [1:134748] 9.94 10 5.81 7.55 7.73 ...\n  ..$ N1.2        : num [1:134748] 10.03 9.86 5.66 7.47 7.62 ...\n  ..$ N1.3        : num [1:134748] 10.18 10.21 5.95 7.61 7.71 ...\n  ..- attr(*, \".internal.selfref\")=&lt;externalptr&gt; \n  ..- attr(*, \"index\")= int(0) \n  .. ..- attr(*, \"__Probe.Set.ID\")= int [1:134748] 40938 25345 64099 125672 125669 125664 23338 67697 6624 60703 ...\n\n\nIn order to have the same contrasts as in the methylation analysis we create the following table:\n\nvalues &lt;- tibble::tibble( # Use all possible combinations of input settings.\n\n  group_var = \"Sample_Group\",\n  Contrasts = c(paste(c(\"Sample_Grouptumour_ARMS-Sample_Groupmetastasis_ARMS\", #T1 vs T2 -&gt; mice\n                        \"Sample_Groupcell_line_ARMS-Sample_Groupprimary_ARMS\", #T0 vs T3 -&gt; start end\n                        \"Sample_Groupcell_line_ARMS-Sample_Grouptumour_ARMS\",  #T0 vs T1 -&gt; tumor\n                        \"Sample_Groupmetastasis_ARMS-Sample_Groupprimary_ARMS\",  #T2 vs T3 -&gt; metastasi\n                        \"Sample_Groupcell_line_ARMS-(Sample_Groupprimary_ARMS+Sample_Grouptumour_ARMS+Sample_Groupmetastasis_ARMS)/3\",  #T0 vs T1&T2&T3\n                        \"(Sample_Groupprimary_ARMS+Sample_Groupcell_line_ARMS)/2-(Sample_Grouptumour_ARMS+Sample_Groupmetastasis_ARMS)/2\"  #T0&T1 vs T2&T3\n                        ),collapse = \";\"\n                      ),\n                paste(c(\"Sample_Groupprimary_NBL-Sample_Grouptumour_NBL\", #T0 vs T1 -&gt; tumor\n                        \"Sample_Grouptumour_NBL-Sample_Groupmetastasis_NBL\", #T1 vs T2 -&gt; mice\n                        \"(Sample_Groupprimary_NBL+Sample_Grouptumour_NBL)/2-Sample_Groupmetastasis_NBL\",  #T0&T1 vs T2 -&gt; tumor vs metastasi\n                        \"Sample_Groupprimary_NBL-(Sample_Grouptumour_NBL+Sample_Groupmetastasis_NBL)/2\" #T0 vs T1&T2 -&gt; culture vs Tissue\n                        ),collapse = \";\"\n                      ),\n                paste(c(\"Sample_Grouptumour_ARMS-Sample_Grouptumour_NBL\", # T1 -&gt; tumors\n                       \"Sample_Groupmetastasis_ARMS-Sample_Groupmetastasis_NBL\", #T2 -&gt; metastasi\n                       \"Sample_Groupcell_line_ARMS-Sample_Groupprimary_NBL\",  # T0 CL\n                       \"(Sample_Groupcell_line_ARMS+Sample_Groupprimary_NBL)/2-(Sample_Grouptumour_ARMS+Sample_Groupmetastasis_ARMS+Sample_Grouptumour_NBL+Sample_Groupmetastasis_NBL)/4\" #T0 vs T1&T2 -&gt; culture vs Tissue\n\n                       ),collapse = \";\"\n                )\n  ),\n                \n  Contrast_names=list(c(\"At1-At2:tissue\",\"At0-At3:start/end\",\"At0-At1:tumors\",\"At2-At3:metastasis\",\"At0-All:Cell_line\",\"At0At1 - At2At3:TuMet\"),\n                   c(\"Nt0-Nt1:tumor\",\"N1-Nt2:tissue\",\"Nt0+Nt1-Nt2:tumor/metastasi\",\"Nt0-All:culture/tissue\"),\n                   c(\"At1-Nt1:tumors\",\"At2-Nt2:metastasi\",\"At0-Nt0:Cultures\",\"culture vs tissue\")\n                   )\n)\n\n\nlibrary(data.table)\nARMS&lt;-counts[[\"ARMS\"]]\nARMS_ids&lt;-intersect(ss$Exp_SID, colnames(ARMS))\nARMS[,rn:=as.numeric(rownames(ARMS))]\nanno_ids&lt;- c(\"rn\",colnames(anno))\nsetkey(ss,Exp_SID)\nARMS_exp.mat&lt;-as.matrix(ARMS[,.SD,.SDcols=ARMS_ids])\nARMS_ss &lt;- ss[ARMS_ids,]\n\n\nARMS.model &lt;- mod(object = ARMS_exp.mat,\n                  group_var = values$group_var[1],\n                  contrasts = values$Contrasts[1],\n                  covs= NULL ,\n                  metadata = ARMS_ss,\n                  idcol=\"Exp_SID\",\n                  rename=values$Contrast_names[[1]])\n\n\nDEGs &lt;- DMPextr(fit=ARMS.model,p.value = 0.05, beta_normalized = ARMS[,.SD,.SDcols=ARMS_ids],mDiff = 0.000001,ann=ARMS[,.SD,.SDcols=anno_ids],writeOut = F)\n\n\nDEGs$Type&lt;-ifelse(DEGs$logFC&gt;0,\"Hyper\",\"Hypo\")\napply_filter_dmps(dmps = DEGs,p.value = seq(0.00,0.05,0.01),mDiff = seq(0,4,.5),path = \"analysis/DE\")\n\n\n\n\n\npvals\n\n\n\n\nDEGs[,diffexpressed:=ifelse(abs(logFC)&lt;2,\"NONE\",ifelse(logFC&lt;0,\"DOWN\",\"UP\")) ]\nvp&lt;-vulcanos(data=DEGs,x=\"logFC\",y=\"adj.P.Val\",col=\"diffexpressed\",label=\"Gene.Symbol\",labSize = 2,max.overlaps = 100)\nggsave(filename = \"DE_vulcano_plots.png\",plot = vp,device = \"png\",path =  \"analysis/DE\",dpi = \"retina\" )\n\n\n\n\n\nvulcanos"
  },
  {
    "objectID": "expression.html#methylation",
    "href": "expression.html#methylation",
    "title": "2  Expression data analysis",
    "section": "3.4 Methylation:",
    "text": "3.4 Methylation:\nA previous methylation analysis was performed. You can check the results here:\n\n\n\n\n\n3.4.1 DMRS:\n\ndmrs&lt;-as.data.table(readRDS(\"data/dmrs1_ARMS.rds\"))\ndmrs&lt;-dmrs[!is.na(overlapping.genes),]\nano_cols&lt;-c(\"seqnames\",\"start\",\"end\",\"width\",\"no.cpgs\",\"HMFDR\",\"meandiff\",\"Contrast\")\ndt_list&lt;- lapply(\n  1:NROW(dmrs),function(rn){  # For every position or ProbeID do:\n    UCSC &lt;-       # 1. generate a data.table (per row)\n      dmrs[rn,       # 2. split UCSC gene and position\n               lapply(       # 3. new row for every combination of gene/position\n                 overlapping.genes,        # 4. add Contrast porbeID and bval difference\n                 function(x)unlist(strsplit(x,\",\"))\n                 )\n               ,by=ano_cols]\n      \n    })\ndt_dmrs &lt;- rbindlist(dt_list)\nDMRs_ARMS &lt;- dt_dmrs[,Gene:=V1][!is.na(V1),]\nDMRs_ARMS$V1 &lt;- NULL\n\nsaveRDS(DMRs_ARMS,\"data/DMRs_ARMS.rds\")\n\n\nDMRs&lt;-DMRs_ARMS\ndtable(DMRs)\n\nWarning in instance$preRenderHook(instance): It seems your data is too big for\nclient-side DataTables. You may consider server-side processing:\nhttps://rstudio.github.io/DT/server.html"
  },
  {
    "objectID": "expression.html#dmrs-vs-expression",
    "href": "expression.html#dmrs-vs-expression",
    "title": "2  Expression data analysis",
    "section": "4.1 DMRs vs expression",
    "text": "4.1 DMRs vs expression\nIn first place let’s see if there is any overlap between Differentially methylated genes (DMGs) and Differentially Expressed Genes (DEGs):\n\nDEGs[,Gene:=Gene.Symbol]\ndt_DEG_DMR &lt;- merge(DMRs_ARMS,DEGs,by=c(\"Gene\",\"Contrast\"),all = T)\ntab &lt;- dt_DEG_DMR[,.(DEGs=sum(!is.na(Probe.Set.ID)),DMRs=sum(!is.na(start)),overlap=sum(!(is.na(start)) &!(is.na(Probe.Set.ID)) )),by=c(\"Contrast\")]\nkableExtra::kbl(tab)|&gt;kableExtra::kable_classic_2()\n\n\n\n\nContrast\nDEGs\nDMRs\noverlap\n\n\n\n\nAt0-All:Cell_line\n3201\n6650\n160\n\n\nAt0-At1:tumors\n4800\n5781\n214\n\n\nAt0-At3:start/end\n147\n7494\n8\n\n\nAt0At1 - At2At3:TuMet\n11213\n1517\n123\n\n\nAt2-At3:metastasis\n3043\n1046\n25\n\n\nAt1-At2:tissue\n0\n1\n0\n\n\n\n\n\n\n\nIn the table above there is one row for each DMG associated to a DMR, so there may be more ### Venn diagrams:\n\nlibrary(gridExtra)\nlibrary(venn)\nlibrary(ggplot2)\nlibrary(ggpolypath)\nlibrary(grid)\ndt_venn &lt;- dt_DEG_DMR[!is.na(Gene.Symbol)&!is.na(start),Gene,by=Contrast]\ngenelist &lt;- unique(dt_venn$Gene)\ngl &lt;- as.data.frame(lapply(unique(dt_venn$Contrast),function(x)genelist %in% dt_venn[Contrast==x,Gene]))\nnames(gl)&lt;-unique(dt_venn$Contrast)\nARMS_venn.plot &lt;- venn::venn(gl,ilabels=TRUE, zcolor = \"style\", ggplot=T, box=F)\n# ARMS_euler.plot &lt;- plot(euler(gl, shape = 'ellipse'),quantities=T)\n# ARMS_euler.plot\nARMS_venn &lt;- grid.arrange(ARMS_venn.plot,\n             top=grid::textGrob(\"ARMS: Differentially Expressed & Differentially Methylated Genes\",gp=grid::gpar(fontsize=14,font=3))\n)\n\nggsave(filename = \"ARMS_VENN.png\",plot = ARMS_venn,device = \"png\",path =  \"analysis/DE\",dpi = \"retina\" )\n\n\n\n\n\n\n\n\nVENN_ARMS\n\n\n\n\n4.1.1 DEG/DMR overlapping Correlations:\nNow we want to get the mean beta value for each sample in the dmr location: 1. Find all cpg that fall in the dmr 2. get the mean for each sample 3. Match each sample bVal with it’s expression value. (No way to do it, since there is no key sample to sample) 4. Make correlation 5. Plot.\n\nol &lt;- dt_DEG_DMR[!is.na(Gene.Symbol)&!is.na(start),]\n\n\nlibrary(data.table)\nlibrary(GenomicRanges)\nlibrary(IlluminaHumanMethylationEPICanno.ilm10b2.hg19)\nbetas &lt;-as.data.table(readRDS(\"data/betas_ARMS.rds\"),keep.rownames = \"ProbeID\")\nlocs &lt;- IlluminaHumanMethylationEPICanno.ilm10b2.hg19::Locations\nlocs.ranges &lt;- GRanges(locs$chr, IRanges(locs$pos, locs$pos))\nnames(locs.ranges) &lt;- rownames(locs)\n# locs.ranges$gene_element &lt;- IlluminaHumanMethylationEPICanno.ilm10b2.hg19::Other$UCSC_RefGene_Group\n# locs.ranges$gene &lt;- IlluminaHumanMethylationEPICanno.ilm10b2.hg19::Other$UCSC_RefGene_Name\nmcols(locs.ranges)&lt;-IlluminaHumanMethylationEPICanno.ilm10b2.hg19::Other\ndt_DEG_DMR_intersect&lt;-lapply(1:NROW(ol),function(nr){\n  cont&lt;-ol[nr,Contrast]\n  xpr &lt;- counts[[\"ARMS\"]][Probe.Set.ID==ol[nr,Probe.Set.ID]]\n  xpr&lt;-xpr[,.SD,.SDcols=names(xpr)[!(names(xpr)%in%c(\"rn\",names(anno)))]]\n  expression &lt;- suppressWarnings(melt(xpr,measure.vars=colnames(xpr),variable.name = \"SID\",value.name = \"TPM\" ))\n  SIDs &lt;- ss[Exp_SID %in% as.character(expression$SID),barcode]\n  cgs &lt;- names(subsetByOverlaps(locs.ranges,GRanges(ol[nr,])))\n\n  #### Annotate DMRs with genomic location:\n  \n  ann&lt;-as.data.frame(mcols( subsetByOverlaps(locs.ranges,GRanges(ol[nr,]))))|&gt;as.data.table(keep.rownames=\"ProbeID\")\n\n  # Possibility of multiple genes and genomic location per probe\n  genomic&lt;-lapply(1:NROW(ann),\n                  function(cg){\n                    # For every position or ProbeID do:\n                                          # 1. generate a data.table (per row)\n                    UCSC_genes &lt;-ann[cg,        # 2. split UCSC gene and position\n                        lapply(           # 3. new row for every combination of gene/position\n                               .SD,       # 4. add Contrast porbeID and bval difference\n                               function(x)unlist(strsplit(x,\";\"))\n                               )\n                        ,.SDcols=c(\"UCSC_RefGene_Group\",\"UCSC_RefGene_Name\")]\n                    enhancers&lt;-ann[cg,.SD,.SDcols=unlist(sapply(c(\"Enhancer\",\"OpenChromatin\",\"TFBS\"),function(n) colnames(ann)[colnames(ann) %like% n]))]\n                    return(cbind(UCSC_genes,enhancers))\n                  }\n                  \n                  )\n  # 5. rbind all together:\n  genomic_loc &lt;- rbindlist(genomic)|&gt; unique() # should get gene annotation from here to be fair\n  ge &lt;- factor(genomic_loc$UCSC_RefGene_Group,levels = c(\"3'UTR\",\"ExonBnd\", \"1stExon\",\"5'UTR\",\"Body\",\"TSS200\",\"TSS1500\"),ordered=T  )\n  gene_location &lt;- ifelse(startsWith( as.character(max(ge)),\"TSS\" ),\"promoter\",\"intragenic\")\n  \n  annot &lt;- genomic_loc[,lapply(.SD,function(x)paste(unique(x[nchar(x)&gt;0]),collapse = \";\"))]\n  annot$gene_location &lt;- gene_location\n  ####\n  \n  b&lt;-betas[ProbeID %in% cgs ,lapply(.SD,function(x)mean(x,na.rm=T)),.SDcols=SIDs]\n  meth &lt;- suppressWarnings( melt(b,measure.vars=colnames(b),variable.name = \"barcode\",value.name = \"DMR.meth\" ))\n  meth$SID &lt;- ss[meth,Exp_SID,on=\"barcode\"]\n  # list(meth,expression)\n  m &lt;- merge(meth,expression,by=\"SID\")\n  m &lt;- m[,lapply(.SD,as.numeric),by=SID]\n  dt&lt;-cbind(ol[nr,],m)\n  cor&lt;-cor.test(dt$DMR.meth,dt$TPM)\n  dt$correlation &lt;- cor$estimate\n  dt$cor.pval &lt;- cor$p.value\n  dt &lt;- cbind(dt,annot)\n  dt$barcode=nr\n  return(dt)\n  })|&gt;rbindlist()\n\n\ndt_cor &lt;-dt_DEG_DMR_intersect\ndt_cor$Condition &lt;-ss[dt_DEG_DMR_intersect,\"Condition\",on=\"SID\"]\ndt_cor$Contrast &lt;- as.factor(dt_cor$Contrast)\ndt_cor$SID &lt;- as.factor(dt_cor$SID)\nreg_element_names&lt;-unlist(sapply(c(\"Enhancer\",\"OpenChromatin\",\"TFBS\"),function(n) colnames(dt_cor)[colnames(dt_cor) %like% n]))\nreg &lt;- dt_cor[,sapply(.SD,nchar)&gt;0,.SDcols=reg_element_names   ]\ndt_cor$regulatory &lt;- apply(reg,1,function(x)paste(colnames(reg)[x],collapse=\";\"))\nsetorder(dt_cor,cor.pval,Gene)\nsaveRDS(dt_cor,\"data/dt_cor.rds\")\n\n\nreg_element_names&lt;-unlist(sapply(c(\"Enhancer\",\"OpenChromatin\",\"TFBS\"),function(n) colnames(dt_cor)[colnames(dt_cor) %like% n]))\n\n\n4.1.1.1 Table for DMR & DEG:\nIn the following table the values for methylation and expression are integrated:\n\ndtable(dt_cor[,.SD,.SDcols=c(\"Gene\",\"Contrast\",\"SID\",\"DMR.meth\",\"TPM\",\"correlation\",\"cor.pval\")])\n\n\n\n\n\n\n\n\n\n4.1.2 Plots\n\nlibrary(ggplot2)\nlibrary(data.table)\nlibrary(ggpubr)\nlibrary(ggrepel)\nDMR_DEG_plots &lt;- list()\nplots_folder &lt;- \"analysis/Integration_with_expression/DEGvsDMR/pval\"\ndir.create(plots_folder,recursive = T,showWarnings = F)\nsetkeyv(dt_cor,c(\"barcode\"))\n\nfor(cont in unique(dt_cor$Contrast)){\n  \n  ID&lt;-dt_cor[Contrast==cont,head(unique(barcode),10)]\n  plist &lt;- lapply(ID,function(nr){\n    pdata &lt;- dt_cor[barcode==nr,]\n    plot_name &lt;- paste0(\"/DEG_DMR.pval_\", unlist(unique(dt_cor[barcode==nr,Gene]))[1], \".png\")\n    plt_path &lt;- paste(plots_folder, cont, sep = .Platform$file.sep)\n    dir.create(plt_path,recursive = T,showWarnings = F)\n    p&lt;-ggplot(data=pdata, aes(x=as.numeric(TPM),y=as.numeric(DMR.meth),colour=SID)) +\n    geom_point(aes(shape=Condition),size=8,alpha=0.6) +\n    xlab(\"Mean Gene methylation (DMR)\") + ylab(\"Mean Gene Expression (Probeset)\") +\n\n    geom_smooth(method = \"lm\",\n                inherit.aes = F,\n                aes(x=as.numeric(pdata$TPM),y=as.numeric(pdata$DMR.meth)),\n                linetype=\"dashed\",\n                se=F,\n                formula = \"y ~ x\")+\n\n    annotate(geom = \"text\",\n             x = -Inf, y = Inf,\n             label=paste0(\"correlation: \", round(unique(pdata$correlation),4), \", p-value: \", round(unique(pdata$cor.pval),8)),\n             hjust = 0, vjust = 1\n             )  +\n\n    ggtitle(paste0(\" Correlation between expression and methylation for gene: \",unique(pdata$Gene)))\n    ggsave(path = plt_path, filename = plot_name, plot=p)\n    return(p)\n  })\n  DMR_DEG_plots[[cont]] &lt;- plist\n  }\nsaveRDS(DMR_DEG_plots,\"data/DMR_DEG_plots.rds\")\n\n\n# FUN &lt;- function(cont) cat(\"\\n\\n#### Top Correlation plots for contrast \", cont, \"\\n\n# ```{r}\n# #| column: screen-inset-right\n# #| layout-ncol: 4\n# #| results: hide\n# #| fig-height: 4\n# #| fig-keep: all\n#   print(DMR_DEG_plots[[\",cont,\"]][1:10])\n# ```\\n\")\n# \n\n# invisible(sapply(values$Contrast_names[[1]],FUN))\nDMR_DEG_plots"
  },
  {
    "objectID": "expression.html#dna-methylation-context",
    "href": "expression.html#dna-methylation-context",
    "title": "2  Expression data analysis",
    "section": "5.1 DNA methylation context:",
    "text": "5.1 DNA methylation context:\nAlthough the relationship between DNA methylation and gene expression is complex and the mechanisms involved in gene regulation by DNA methylation are diverse. Fortunately, over the years researchers have found some common relationships between gene methylation and gene expression:\nDNA methylation is an epigenetic mark that has been traditionally associated with gene silencing, specially when methylation happens on promoter regions. DNA methylation is related with the repressed chromatin state which blocks the access of transcription factors to promoter regions. Thus, silencing promoter activity in a stable way and reducing transcription Suzuki and Bird (2008).\nIn the other hand, the bodies of active genes in plants and animals are often heavily methylated. Suzuki and Bird (2008)\nTherefore, usually it is expected to find most of the genes to have negative correlations between DNA methylation and gene transcription in promoter regions while some of the genes might present positive correlations specially in intra-genic regions.\nNow, let’s inspect our data, the following table shows a summary of the paired DMGs and DEGs:\n\ntab.full &lt;- dt_cor[,.(\n  negative.cor=sum(unique(correlation)&lt;0),\n  positive.cor=sum(unique(correlation)&gt;0),\n  Regulatory.elements=sum(nchar(unique(regulatory))&gt;0),\n  Total=sum(unique(correlation)!=0)),\n  by=c(\"Contrast\",\"barcode\")]\ntab_summary &lt;-tab.full[,lapply(.SD,sum),by=Contrast,.SDcols=c(\"Regulatory.elements\",\"negative.cor\",\"positive.cor\",\"Total\")]\nkableExtra::kbl(tab_summary)|&gt;kableExtra::kable_classic_2()\n\n\n\n\nContrast\nRegulatory.elements\nnegative.cor\npositive.cor\nTotal\n\n\n\n\nAt0-All:Cell_line\n205\n100\n157\n257\n\n\nAt0-At1:tumors\n326\n156\n243\n399\n\n\nAt0-At3:start/end\n24\n20\n12\n32\n\n\nAt0At1 - At2At3:TuMet\n130\n57\n115\n172\n\n\nAt2-At3:metastasis\n64\n52\n41\n93\n\n\n\n\n\n\n\n\nHere you can see a summary table of the Total ammount of genes that are both Differentially Methylated and Differentially Expressed. For this to yield true, there has to be at least one DMR, composed by at least 3 probes (cpg) from the methylation microarray that fall in the same region of the genome as well as a significant difference in expression associated to the same gene: - Regulatory.elements: Genes that have a DMR associated to any of the following regulatory elements: r paste(reg_element_names, collapse=\", \") - negative.cor: Total number of negatively correlated genes where methylation and expression work in opposite directions. - positive.cor: Total number of positively correlated genes where methylation and expression go in the same direction. - Total ammount of genes that are both DE and DM.\n\n\ndtable(dt_cor[,.SD,.SDcols=c(\"Gene\",\"Contrast\",\"no.cpgs\",\"width\",\"SID\",\"DMR.meth\",\"TPM\",\"correlation\",\"cor.pval\", \"gene_location\",reg_element_names)])\n\nWarning in instance$preRenderHook(instance): It seems your data is too big for\nclient-side DataTables. You may consider server-side processing:\nhttps://rstudio.github.io/DT/server.html"
  },
  {
    "objectID": "expression.html#full",
    "href": "expression.html#full",
    "title": "2  Expression data analysis",
    "section": "5.2 Full",
    "text": "5.2 Full\nThis dataset is not filtered by the strength of the correlation between DMRs and DEGs.\n\n5.2.1 Pathways\n\npath_results&lt;-function(pathway,topN=50,method=\"method\",pval=0.05,path=\"results/pathways.csv\",cols=NULL){\n  # pathway&lt;-pathway[FDR&lt;1,]\n  pathway$method&lt;-pathway[[method]]\n  data.table::setorder(pathway,method,FDR)\n  sig_idx &lt;- pathway[,.I[FDR &lt; pval]  ,by=method]$V1\n  head_idx&lt;-pathway[,.I[1:min(..topN,.N)],by=c(method,\"Contrast\")]$V1\n  res&lt;-pathway[base::union(sig_idx,head_idx),]\n  # res[,TERM:=ifelse(FDR&lt;pval,paste0(\"*** \",TERM,\" ***\"),TERM)]\n  # data.table::fwrite(res,path)\n  results&lt;-res[,.SD,.SDcols=c(\"Contrast\",\"FDR\",cols,\"TERM\",\"method\")]\n  data.table::setorder(results,Contrast,method,FDR)\n  return(results)\n}\n\nlibrary(gprofiler2)\npathways_full &lt;- lapply(unique(dt_cor$Contrast),function(cont){\n  library(gprofiler2)\n  library(data.table)\n   p&lt;-gprofiler2::gost(signif = T ,unique(dt_cor[Contrast==cont,Gene]))[[1]]\n   if(!is.null(p)){\n    dth&lt;- data.table::as.data.table(p)\n    dth[,FDR:=p_value]\n    dth[,TERM:=term_name]\n    dth[,source:=factor(source)]\n    dth[,Contrast:=cont]\n   }\n  })\nPathway_Full&lt;-path_results(rbindlist(pathways_full),method=\"source\",cols = c(\"term_size\",\"query_size\",\"intersection_size\"))\nsaveRDS(Pathway_Full,\"data/pathway_full.rds\")\n\n\ndtable(Pathway_Full)\n\n\n\n\n\n\nAs you can see the terms are rather general. Let’s try to filter based on the direction of correlation + / -:\n\n5.2.1.1 Positive:\n\ndt_pos &lt;- dt_cor[correlation&gt;0,]\npathways_full_positive &lt;- lapply(unique(dt_pos$Contrast),function(cont){\n  library(gprofiler2)\n  library(data.table)\n   p&lt;-gprofiler2::gost(signif = T ,unique(dt_pos[Contrast==cont,Gene]))[[1]]\n   if(!is.null(p)){\n    dth&lt;- data.table::as.data.table(p)\n    dth[,FDR:=p_value]\n    dth[,TERM:=term_name]\n    dth[,source:=factor(source)]\n    dth[,Contrast:=cont]\n   }\n  })\n\nNo results to show\nPlease make sure that the organism is correct or set significant = FALSE\n\nPathway_Full_Pos&lt;-path_results(rbindlist(pathways_full_positive),method=\"source\",cols = c(\"term_size\",\"query_size\",\"intersection_size\"))\nsaveRDS(Pathway_Full_Pos,\"data/pathway_full_positive.rds\")\n\n\ndtable(Pathway_Full_Pos)\n\n\n\n\n\n\n\n\n5.2.1.2 Negative:\n\ndt_neg &lt;- dt_cor[correlation&lt;0,]\npathways_full_negitive &lt;- lapply(unique(dt_neg$Contrast),function(cont){\n  library(gprofiler2)\n  library(data.table)\n   p&lt;-gprofiler2::gost(signif = T ,unique(dt_neg[Contrast==cont,Gene]))[[1]]\n   if(!is.null(p)){\n    dth&lt;- data.table::as.data.table(p)\n    dth[,FDR:=p_value]\n    dth[,TERM:=term_name]\n    dth[,source:=factor(source)]\n    dth[,Contrast:=cont]\n   }\n  })\n\nNo results to show\nPlease make sure that the organism is correct or set significant = FALSE\n\nPathway_Full_neg&lt;-path_results(rbindlist(pathways_full_negitive),method=\"source\",cols = c(\"term_size\",\"query_size\",\"intersection_size\"))\nsaveRDS(Pathway_Full_neg,\"data/pathway_full_negative.rds\")\n\n\ndtable(Pathway_Full_neg)"
  },
  {
    "objectID": "expression.html#cor.sig",
    "href": "expression.html#cor.sig",
    "title": "2  Expression data analysis",
    "section": "5.3 cor.sig",
    "text": "5.3 cor.sig\nThis dataset is not filtered by the strength of the correlation between DMRs and DEGs.\n\n5.3.1 Pathways\n\ndt.sig &lt;-  dt_cor[cor.pval&lt;0.05 ,.(correlation=unique(correlation)),by=c(\"Contrast\",\"Gene\",\"width\")]\n\n\nlibrary(gprofiler2)\npathways_full &lt;- lapply(unique(dt.sig$Contrast),function(cont){\n  library(gprofiler2)\n  library(data.table)\n   p&lt;-gprofiler2::gost(signif = T ,unique(dt.sig[Contrast==cont,Gene]))[[1]]\n   if(!is.null(p)){\n    dth&lt;- data.table::as.data.table(p)\n    dth[,FDR:=p_value]\n    dth[,TERM:=term_name]\n    dth[,source:=factor(source)]\n    dth[,Contrast:=cont]\n   }\n  })\n\nNo results to show\nPlease make sure that the organism is correct or set significant = FALSE\nNo results to show\nPlease make sure that the organism is correct or set significant = FALSE\n\nPathway_Full&lt;-path_results(rbindlist(pathways_full),method=\"source\",cols = c(\"term_size\",\"query_size\",\"intersection_size\"))\nsaveRDS(Pathway_Full,\"data/pathway_full_sig.rds\")\n\n\ndtable(Pathway_Full)\n\n\n\n\n\n\nAs you can see the terms are rather general. Let’s try to filter based on the direction of correlation + / -:\n\n5.3.1.1 Positive:\n\ndt_pos &lt;- dt.sig[correlation&gt;0,]\npathways_full_positive &lt;- lapply(unique(dt_pos$Contrast),function(cont){\n  library(gprofiler2)\n  library(data.table)\n   p&lt;-gprofiler2::gost(signif = T ,unique(dt_pos[Contrast==cont,Gene]))[[1]]\n   if(!is.null(p)){\n    dth&lt;- data.table::as.data.table(p)\n    dth[,FDR:=p_value]\n    dth[,TERM:=term_name]\n    dth[,source:=factor(source)]\n    dth[,Contrast:=cont]\n   }\n  })\n\nNo results to show\nPlease make sure that the organism is correct or set significant = FALSE\nNo results to show\nPlease make sure that the organism is correct or set significant = FALSE\n\nPathway_Full_Pos&lt;-path_results(rbindlist(pathways_full_positive),method=\"source\",cols = c(\"term_size\",\"query_size\",\"intersection_size\"))\nsaveRDS(Pathway_Full_Pos,\"data/pathway_full_positive_sig.rds\")\n\n\ndtable(Pathway_Full_Pos)\n\n\n\n\n\n\n\n\n5.3.1.2 Negative:\n\ndt_neg &lt;- dt.sig[correlation&lt;0,]\npathways_full_negitive &lt;- lapply(unique(dt_neg$Contrast),function(cont){\n  library(gprofiler2)\n  library(data.table)\n   p&lt;-gprofiler2::gost(signif = T ,unique(dt_neg[Contrast==cont,Gene]))[[1]]\n   if(!is.null(p)){\n    dth&lt;- data.table::as.data.table(p)\n    dth[,FDR:=p_value]\n    dth[,TERM:=term_name]\n    dth[,source:=factor(source)]\n    dth[,Contrast:=cont]\n   }\n  })\nPathway_Full_neg&lt;-path_results(rbindlist(pathways_full_negitive),method=\"source\",cols = c(\"term_size\",\"query_size\",\"intersection_size\"))\nsaveRDS(Pathway_Full_neg,\"data/pathway_full_negative_sig.rds\")\n\n\ndtable(Pathway_Full_neg)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n–&gt;\n\n–&gt;\n\n–&gt;  –&gt;  –&gt;  –&gt;  –&gt;\n\n–&gt;\n\n–&gt;\n\n–&gt;\n\n–&gt;\n\n–&gt;  –&gt;  –&gt;  –&gt;  –&gt;\n\n–&gt;  –&gt;  –&gt;  –&gt;  –&gt;  –&gt;  –&gt;  –&gt;  –&gt;  –&gt;  –&gt;  –&gt;  –&gt;  –&gt;  –&gt;  –&gt;  –&gt;  –&gt;  –&gt;  –&gt;\n\n–&gt;\n\n–&gt;\n\n–&gt;  –&gt;  –&gt;  –&gt;  –&gt;  –&gt;  –&gt;  –&gt;  –&gt;  –&gt;  –&gt;  –&gt;  –&gt;  –&gt;  –&gt;\n\n–&gt;\n\n–&gt;  –&gt;  –&gt;  –&gt;\n\n–&gt;\n\n–&gt;  –&gt;  –&gt;\n\n\n\n\nSuzuki, Miho M., and Adrian Bird. 2008. “DNA Methylation Landscapes: Provocative Insights from Epigenomics.” Nature Reviews Genetics 9 (June): 465–76. https://doi.org/10.1038/nrg2341."
  },
  {
    "objectID": "summary.html",
    "href": "summary.html",
    "title": "3  Summary",
    "section": "",
    "text": "In summary, this book has no content whatsoever."
  },
  {
    "objectID": "references.html",
    "href": "references.html",
    "title": "References",
    "section": "",
    "text": "Suzuki, Miho M., and Adrian Bird. 2008. “DNA Methylation\nLandscapes: Provocative Insights from Epigenomics.” Nature\nReviews Genetics 9 (June): 465–76. https://doi.org/10.1038/nrg2341."
  }
]